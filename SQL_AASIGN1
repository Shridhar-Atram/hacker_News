CREATE TABLE ZIPCODE_INFO(ZIP_CODE VARCHAR2(6),CITY VARCHAR(10));
DESC ZIPCODE_INFO;
 
CREATE TABLE INSTRUCTOR_INFO(INSTRUCTOR_ID NUMBER(8),INSTRUCTOR_FIRST_NAME VARCHAR2(15),INSTRUCTOR_LAST_NAME VARCHAR(15));
DESC INSTRUCTOR_INFO;
 
CREATE TABLE COURSE_INFO(COURSE_NO NUMBER(8),COST NUMBER(5) );
DESC COURSE_INFO;
 
CREATE TABLE STUDENT_INFO(STUDENT_ID NUMBER(8),STUDENT_FIRST_NAME VARCHAR(15),STUDENT_LAST_NAME VARCHAR(15));
DESC STUDENT_INFO;
 
CREATE TABLE SECTION_INFO(SECTION_ID NUMBER(8),COURSE_NO NUMBER(8),SECTION_NO NUMBER(5),INSTRUCTOR_ID NUMBER(8) );
DESC SECTION_INFO;
 
 
CREATE TABLE ENROLLMENT_INFO(STUDENT_ID NUMBER(8),SECTION_ID NUMBER(8) );
DESC ENROLLMENT_INFO;
 
CREATE TABLE GRADE_INFO(STUDENT_ID NUMBER(8),SECTION_ID NUMBER(8) , GRADE_TYPE_CODE CHAR(2),GRADE_CODE_OCCURENCE NUMBER(5));
DESC GRADE_INFO;
 
 


ALTER TABLE ZIPCODE_INFO MODIFY ZIP_CODE VARCHAR(5);
ALTER TABLE ZIPCODE_INFO MODIFY CITY VARCHAR2(25);
ALTER TABLE ZIPCODE_INFO MODIFY STATE VARCHAR2(100);
DESC ZIPCODE_INFO;

ALTER TABLE INSTRUCTOR_INFO ADD(STREET_ADDRESS VARCHAR2(50),ZIP_CODE VARCHAR2(5));
DESC INSTRUCTOR_INFO;



ALTER TABLE COURSE_INFO ADD COURSE_NAME VARCHAR2(50) ;
ALTER TABLE COURSE_INFO ADD COURSE_PREREQUISITE NUMBER(8,0) ;
ALTER TABLE COURSE_INFO MODIFY COST NUMBER(9,2);
DESC COURSE_INFO;




ALTER TABLE STUDENT_INFO MODIFY STUDENT_FIRST_NAME VARCHAR2(25);
ALTER TABLE STUDENT_INFO MODIFY STUDENT_LAST_NAME VARCHAR2(25);
ALTER TABLE STUDENT_INFO ADD STUDENT_ADDRESS VARCHAR2(50);
ALTER TABLE STUDENT_INFO ADD ZIP_CODE VARCHAR2(5);
DESC STUDENT_INFO;


ALTER TABLE SECTION_INFO ADD LOCATION VARCHAR2(50);
ALTER TABLE SECTION_INFO MODIFY COURSE_NO NUMBER(8,0);
ALTER TABLE SECTION_INFO MODIFY SECTION_NO NUMBER(3,0);
ALTER TABLE SECTION_INFO ADD CAPACITY NUMBER(3,0);
DESC SECTION_INFO;


ALTER TABLE ENROLLMENT_INFO ADD ENROLLMENT_DATE DATE;
DESC ENROLLMENT_INFO;

ALTER TABLE GRADE_INFO MODIFY GRADE_CODE_OCCURENCE NUMBER(38,0);
ALTER TABLE GRADE_INFO ADD NUMERIC_GRADE NUMBER(3,0);
DESC GRADE_INFO;



INSERT INTO ZIPCODE_INFO VALUES(11432, 'Jamaica' , 'NY');
INSERT INTO ZIPCODE_INFO VALUES(11433, 'Jamaica' , 'NY');
INSERT INTO ZIPCODE_INFO VALUES(11434, 'Jamaica' , 'NY');
INSERT INTO ZIPCODE_INFO VALUES(11435, 'Jamaica' , 'NY');
INSERT INTO ZIPCODE_INFO VALUES(11510, 'Baldwin' , 'NY');
SELECT * FROM ZIPCODE_INFO;
DESC ZIPCODE_INFO;

DELETE FROM ZIPCODE_INFO where ZIP_CODE = 11433;
INSERT INTO ZIPCODE_INFO(ZIP_CODE) VALUES(11511);
INSERT INTO ZIPCODE_INFO(ZIP_CODE,CITY) VALUES(11530,'GARDEN CITY');
SELECT * FROM ZIPCODE_INFO;


SELECT * FROM INSTRUCTOR_INFO;
DESC INSTRUCTOR_INFO;
INSERT INTO INSTRUCTOR_INFO VALUES(110, 'llena','Wong','415 West 101st Marleton Street',11432);
INSERT INTO INSTRUCTOR_INFO VALUES(109, 'Lei','Chow','55 10th Avenue Jerry Street',11433);

UPDATE ZIPCODE_INFO SET CITY = 'West Hempstead' WHERE CITY = 'Jamaica' AND ZIP_CODE = 11432;
UPDATE ZIPCODE_INFO SET CITY = 'Atlanta'  WHERE ZIP_CODE = 11435;
UPDATE ZIPCODE_INFO SET STATE = 'GA' WHERE ZIP_CODE = 11435;
SELECT * FROM ZIPCODE_INFO;

ALTER TABLE ZIPCODE_INFO MODIFY ZIP_CODE VARCHAR(15);
UPDATE ZIPCODE_INFO SET ZIP_CODE = 2151024 WHERE ZIP_CODE = 11510;

DELETE FROM ZIPCODE_INFO WHERE ZIP_CODE = 11433;

DELETE FROM INSTRUCTOR_INFO WHERE INSTRUCTOR_FIRST_NAME = 'llena';

DELETE FROM INSTRUCTOR_INFO WHERE 1<>2;
DELETE FROM ZIPCODE_INFO WHERE 1<>2;

---TABLES WITH CONSTRAINTS

ALTER TABLE ZIPCODE_INFO ADD CONSTRAINT ZIP_PK PRIMARY KEY(ZIP_CODE);
ALTER TABLE ZIPCODE_INFO MODIFY (CITY VARCHAR2(255) CONSTRAINT ZIP_CITY_NN NOT NULL);
ALTER TABLE ZIPCODE_INFO MODIFY (STATE VARCHAR2(5) CONSTRAINT ZIP_STATE_NN NOT NULL);

ALTER TABLE INSTRUCTOR_INFO MODIFY (INSTRUCTOR_FIRST_NAME VARCHAR2(25) CONSTRAINT INSTRUCTOR_FN_NN  NOT NULL);
ALTER TABLE INSTRUCTOR_INFO MODIFY (INSTRUCTOR_LAST_NAME VARCHAR2(25) CONSTRAINT INSTRUCTOR_LN_NN  NOT NULL);
ALTER TABLE INSTRUCTOR_INFO ADD CONSTRAINT INSTRUCTOR_ID_PK PRIMARY KEY(ZIP_CODE);
ALTER TABLE INSTRUCTOR_INFO ADD CONSTRAINT ZIP_INSTRUCTOR_FK FOREIGN KEY (ZIP_CODE) REFERENCES ZIPCODE_INFO(ZIP_CODE);
DESC INSTRUCTOR_INFO;


DESC COURSE_INFO;
ALTER TABLE COURSE_INFO ADD CONSTRAINT COURSE_NO_PK PRIMARY KEY(COURSE_NO);
ALTER TABLE COURSE_INFO MODIFY (COURSE_NAME VARCHAR2(50) CONSTRAINT COURSE_NAME_NN  NOT NULL);
ALTER TABLE COURSE_INFO MODIFY (Cost NUMBER(9,2) constraint COST_NN NOT NULL);


---STUDUENT_INFO

ALTER TABLE STUDENT_INFO ADD CONSTRAINT STUDENT_ID_PK PRIMARY KEY(8,0);
ALTER TABLE STUDENT_INFO MODIFY(STUDENT_FIRST_NAME VARCHAR2(25) CONSTRAINT STUDENT_FN_NN NOT NULL);
ALTER TABLE STUDENT_INFO MODIFY(STUDENT_LAST_NAME VARCHAR2(25) CONSTRAINT STUDNET_LN_NN NOT NULL);
ALTER TABLE STUDENT_INFO ADD CONSTRAINT ZIP_STUDENT_FK FOREIGN KEY (ZIP_CODE) REFERENCES ZIPCODE_INFO(ZIP_CODE);


--- SECTION_INFO

DESC SECTION_INFO;

ALTER TABLE SECTION_INFO ADD CONSTRAINT SECTION_ID_PK PRIMARY KEY (SECTION_ID);
ALTER TABLE SECTION_INFO ADD CONSTRAINT COURSE_SECTION_FK FOREIGN KEY(COURSE_NO) REFERENCES COURSE_INFO(COURSE_NO);
ALTER TABLE SECTION_INFO MODIFY(SECTION_NO NUMBER(3,0) CONSTRAINT SECTION_NO_NN NOT NULL);
ALTER TABLE SECTION_INFO ADD CONSTRAINT INSTRUCTOR_SECTION_FK FOREIGN KEY (INSTRUCTOR_ID) REFERENCES INSTRUCTOR_INFO (INSTRUCTOR_ID);

---GRADE_INFO

ALTER TABLE GRADE_INFO ADD CONSTRAINT STUDENTID PRIMARY KEY(STUDENT_ID);
ALTER TABLE GRADE_INFO ADD CONSTRAINT SECTIONID PRIMARY KEY(SECTION_ID);
ALTER TABLE GRADE_INFO ADD CONSTRAINT GRADE_TYPE_CODE_PK PRIMARY KEY(GRADE_TYPE_CODE);
ALTER TABLE GRADE_INFO ADD CONSTRAINT GRADE_CODE_OCCURANCE_PK PRIMARY KEY(GRADE_CODE_OCCURANCE);
ALTER TABLE GRADE_INFO ADD CONSTRAINT GRADE_STUDENT_ID_FK FOREIGN KEY (STUDENT_ID) REFERENCES ENROLLMENT_INFO(STUDENT_ID);
ALTER TABLE GRADE_INFO ADD CONSTRAINT GRADE_STUDENT_ID_FK FOREIGN KEY (SECTION_ID) REFERENCES ENROLLMENT_INFO(SECTION_ID);
ALTER TABLE GRADE_INFO ADD CONSTRAINT CHK_GRADE_TYPE_CODE CHECK (GRADE_TYPE_CODE IN ('FI', 'HM', 'MT', 'PA', 'PJ', 'QZ'));
ALTER TABLE GRADE_INFO MODIFY (NUMERIC_GRADE NUMBER(3,0) CONSTRAINT NUMERIC_GRADE_NN DEFAULT 0);



---TRANSCTION CONTROL LANGUAGE OPERATIONS

INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442001, 'New York', 'New York');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442002, 'Los Angeles', 'California');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442003, 'Chicago', 'Illinois');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442004, 'Houston', 'Texas');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442005, 'Phoenix', 'Arizona');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442006, 'Philadelphia', 'Pennsylvania');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442007, 'San Antonio', 'Texas');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442008, 'San Diego', 'California');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442009, 'Dallas', 'Texas');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442010, 'San Jose', 'California');
INSERT INTO ZIPCODE_INFO (ZIP_CODE, CITY, STATE) VALUES (442011, 'Austin', 'Texas');

SELECT COUNT(*) AS TotalRecords FROM ZIPCODE_INFO;
SAVEPOINT del_SP;
DELETE FROM ZIPCODE_INFO WHERE 1<>2;
SELECT COUNT(*) AS RecordCount FROM ZIPCODE_INFO;
ROLLBACK del_SP;
SELECT COUNT(*) AS TotalRecords FROM ZIPCODE_INFO;
commit;
select * from scott.emp;
select * from scott.DEPT;

create table EMP_COPY as select * from scott.emp;
CREATE TABLE EMP AS SELECT EMPNO FROM SCOTT.EMP;
CREATE TABLE NEW_EMP AS SELECT * FROM SCOTT.EMP;
CREATE TABLE NEWEMP AS SELECT E.EMPNO, E.ENAME, D.DNAME FROM SCOTT.EMP E, SCOTT.DEPT D;
CREATE TABLE EMP10 AS SELECT * FROM SCOTT.EMP WHERE SCOTT.EMP.DEPTNO = 10;
CREATE TABLE EMP20 AS SELECT * FROM SCOTT.EMP WHERE SCOTT.EMP.DEPTNO = 20;
CREATE TABLE EMP1020 AS SELECT * FROM SCOTT.EMP WHERE SCOTT.EMP.DEPTNO = 20 OR SCOTT.EMP.DEPTNO = 10;
SELECT * FROM EMP1020;
CREATE TABLE student (sid INT PRIMARY KEY,sname VARCHAR(255),course_name VARCHAR(255) NOT NULL,UNIQUE(course_name));
CREATE TABLE course (sid INT,course_name VARCHAR(255) PRIMARY KEY,duration INT,FOREIGN KEY (sid) REFERENCES student(sid));
INSERT INTO student (sid, sname, course_name) VALUES (1234, 'sajan', '23 hours');
select * from EMP_COPY;
INSERT INTO EMP_COPY (empno, ename, job, mgr, hiredate, sal, comm, deptno) VALUES (123, 'SHRIDHAR', 'ACCTO', 3421, SYSDATE, 52300, 234, 10);


SELECT * FROM SCOTT.DEPT;
SELECT * FROM SCOTT.EMP;

SELECT ENAME , JOB FROM SCOTT.EMP;
SELECT ENAME , SAL FROM SCOTT.EMP;
SELECT EMPNO, SAL + NVL(COMM, 0) AS TOTAL_SAL FROM SCOTT.EMP;
SELECT ename AS employee_name, sal * 12 AS annual_salary FROM SCOTT.emp;
SELECT ENAME AS EMPLOYEE_NAME FROM SCOTT.EMP WHERE SCOTT.EMP.DEPTNO = 10;
SELECT ename FROM SCOTT.emp WHERE job = 'CLERK' AND sal > 3000;
SELECT ENAME FROM SCOTT.EMP WHERE NVL(COMM,0) != 0;
SELECT ENAME FROM SCOTT.EMP WHERE NVL(COMM,0) = 0;
SELECT SYSDATE FROM DUAL;
SELECT ename FROM SCOTT.emp WHERE hiredate <= ADD_MONTHS(CURRENT_DATE, -60);
SELECT ename FROM SCOTT.emp WHERE (job = 'CLERK' OR job = 'SALESMAN' OR job = 'ANALYST') AND sal > 3000;
SELECT * FROM TAB;

SELECT * FROM emp10 UNION SELECT * FROM emp20 UNION SELECT * FROM emp1020;
SELECT * FROM emp10 INTERSECT SELECT * FROM emp20 INTERSECT SELECT * FROM emp1020;
SELECT * FROM emp10 MINUS SELECT * FROM emp20 MINUS SELECT * FROM emp1020;

SELECT d.dname, e.empno FROM SCOTT.emp e JOIN SCOTT.dept d ON e.deptno = d.deptno;

SELECT empno, ename, hiredate, ROUND(MONTHS_BETWEEN(SYSDATE, hiredate)/12) AS experience_in_months
FROM SCOTT.emp;

ALTER TABLE emp ADD (ename VARCHAR2(20));
ALTER TABLE emp ADD (salary NUMBER);
ALTER TABLE emp ADD CONSTRAINT emp_pk PRIMARY KEY (empno);
ALTER TABLE dept ADD (building_name VARCHAR2(50) UNIQUE);

---DELETE

DELETE FROM emp WHERE hiredate < ADD_MONTHS(SYSDATE, -24);

--UPDATE
UPDATE emp SET comm = comm * 10 / 100 WHERE comm IS NOT NULL;
SELECT ename FROM emp WHERE deptno IN (10, 20, 40) OR job IN ('CLERK', 'SALESMAN', 'ANALYST');
SELECT ename FROM emp WHERE job != 'MANAGER';
SELECT ename FROM emp WHERE job NOT IN ('SALESMAN', 'CLERK', 'ANALYST');
SELECT COUNT(*) AS total_employees FROM emp;
SELECT SUM(sal) AS total_salary, SUM(NVL(comm, 0)) AS total_commission FROM emp;

--DROP
ALTER TABLE emp DROP COLUMN comm;
ALTER TABLE dept DROP CONSTRAINT EMPNO_PK;
